{"ast":null,"code":"import AppStore from '../../stores/Redux/AppStore';\nimport Cookies from 'js-cookie';\nexport const Login = datas => {\n  console.log(\"Login\");\n  fetch(\"https://mycoffees.herokuapp.com/users/sign_in\", {\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(datas)\n  }).then(response => {\n    AppStore.dispatch({\n      type: 'EDIT_TOKEN',\n      newToken: [...response.headers.get(\"authorization\")].join('')\n    });\n    /* Cookies.set('jwt-token', [...response.headers.get(\"authorization\")].join(''), {\n        sameSite: \"None\",\n        secure: true\n    }) */\n\n    return response.json();\n  }).then(response => {\n    AppStore.dispatch({\n      type: \"EDIT_USER\",\n      newUser: response.user\n    });\n    Cookies.set('user', JSON.stringify(response.user), {\n      sameSite: \"None\",\n      secure: true\n    });\n    console.log(response);\n  });\n};\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["AppStore","Cookies","Login","datas","console","log","fetch","method","headers","body","JSON","stringify","then","response","dispatch","type","newToken","get","join","json","newUser","user","set","sameSite","secure"],"sources":["/home/odin/Desktop/THPâ˜ /Developpeur/ProjetFinal1/projet-coffee/src/apiCalls/LoginCall/index.jsx"],"sourcesContent":["import AppStore from '../../stores/Redux/AppStore'\nimport Cookies from 'js-cookie'\n\nexport const Login = (datas) => {\n\n    console.log(\"Login\")\n\n    fetch(\"https://mycoffees.herokuapp.com/users/sign_in\", {\n        method: \"post\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(datas),\n    }).then((response) => {\n        AppStore.dispatch({\n            type: 'EDIT_TOKEN',\n            newToken: [...response.headers.get(\"authorization\")].join('')\n        })\n        /* Cookies.set('jwt-token', [...response.headers.get(\"authorization\")].join(''), {\n            sameSite: \"None\",\n            secure: true\n        }) */\n        return (response.json())\n    }).then((response) => {\n        AppStore.dispatch({\n            type: \"EDIT_USER\",\n            newUser: response.user\n        })\n        Cookies.set('user', JSON.stringify(response.user), {\n            sameSite: \"None\",\n            secure: true\n        })\n        console.log(response)\n    })\n}"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,6BAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAO,MAAMC,KAAK,GAAIC,KAAD,IAAW;EAE5BC,OAAO,CAACC,GAAR,CAAY,OAAZ;EAEAC,KAAK,CAAC,+CAAD,EAAkD;IACnDC,MAAM,EAAE,MAD2C;IAEnDC,OAAO,EAAE;MACL,gBAAgB;IADX,CAF0C;IAKnDC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,KAAf;EAL6C,CAAlD,CAAL,CAMGS,IANH,CAMSC,QAAD,IAAc;IAClBb,QAAQ,CAACc,QAAT,CAAkB;MACdC,IAAI,EAAE,YADQ;MAEdC,QAAQ,EAAE,CAAC,GAAGH,QAAQ,CAACL,OAAT,CAAiBS,GAAjB,CAAqB,eAArB,CAAJ,EAA2CC,IAA3C,CAAgD,EAAhD;IAFI,CAAlB;IAIA;AACR;AACA;AACA;;IACQ,OAAQL,QAAQ,CAACM,IAAT,EAAR;EACH,CAhBD,EAgBGP,IAhBH,CAgBSC,QAAD,IAAc;IAClBb,QAAQ,CAACc,QAAT,CAAkB;MACdC,IAAI,EAAE,WADQ;MAEdK,OAAO,EAAEP,QAAQ,CAACQ;IAFJ,CAAlB;IAIApB,OAAO,CAACqB,GAAR,CAAY,MAAZ,EAAoBZ,IAAI,CAACC,SAAL,CAAeE,QAAQ,CAACQ,IAAxB,CAApB,EAAmD;MAC/CE,QAAQ,EAAE,MADqC;MAE/CC,MAAM,EAAE;IAFuC,CAAnD;IAIApB,OAAO,CAACC,GAAR,CAAYQ,QAAZ;EACH,CA1BD;AA2BH,CA/BM;KAAMX,K"},"metadata":{},"sourceType":"module"}