{"ast":null,"code":"import AppStore from '../../stores/Redux/AppStore';\nimport Cookies from 'js-cookie';\nexport const Register = datas => {\n  console.log(\"Register\");\n  fetch(\"https://mycoffees.herokuapp.com/users\", {\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(datas)\n  }).then(response => {\n    AppStore.dispatch({\n      type: 'EDIT_TOKEN',\n      newToken: [...response.headers.get(\"authorization\")].join('')\n    });\n    Cookies.set('jwt-token', [...response.headers.get(\"authorization\")].join(''), {\n      sameSite: \"None\",\n      secure: true\n    });\n    return response.json();\n  }).then(response => {\n    AppStore.dispatch({\n      type: \"EDIT_USER\",\n      newUser: response.user\n    });\n    Cookies.set('user', JSON.stringify(response.user), {\n      sameSite: \"None\",\n      secure: true\n    });\n  });\n};\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["AppStore","Cookies","Register","datas","console","log","fetch","method","headers","body","JSON","stringify","then","response","dispatch","type","newToken","get","join","set","sameSite","secure","json","newUser","user"],"sources":["/home/odin/Desktop/THPâ˜ /Developpeur/ProjetFinal1/projet-coffee/src/apiCalls/RegisterCall/index.jsx"],"sourcesContent":["import AppStore from '../../stores/Redux/AppStore'\nimport Cookies from 'js-cookie'\n\nexport const Register = (datas) => {\n\n    console.log(\"Register\")\n\n    fetch(\"https://mycoffees.herokuapp.com/users\", {\n        method: \"post\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(datas),\n    }).then((response) => {\n        AppStore.dispatch({\n            type: 'EDIT_TOKEN',\n            newToken: [...response.headers.get(\"authorization\")].join('')\n        })\n        Cookies.set('jwt-token', [...response.headers.get(\"authorization\")].join(''), {\n            sameSite: \"None\",\n            secure: true\n        })\n        return (response.json())\n    }).then((response) => {\n        AppStore.dispatch({\n            type: \"EDIT_USER\",\n            newUser: response.user\n        })\n        Cookies.set('user', JSON.stringify(response.user), {\n            sameSite: \"None\",\n            secure: true\n        })\n    })\n}"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,6BAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EAE/BC,OAAO,CAACC,GAAR,CAAY,UAAZ;EAEAC,KAAK,CAAC,uCAAD,EAA0C;IAC3CC,MAAM,EAAE,MADmC;IAE3CC,OAAO,EAAE;MACL,gBAAgB;IADX,CAFkC;IAK3CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,KAAf;EALqC,CAA1C,CAAL,CAMGS,IANH,CAMSC,QAAD,IAAc;IAClBb,QAAQ,CAACc,QAAT,CAAkB;MACdC,IAAI,EAAE,YADQ;MAEdC,QAAQ,EAAE,CAAC,GAAGH,QAAQ,CAACL,OAAT,CAAiBS,GAAjB,CAAqB,eAArB,CAAJ,EAA2CC,IAA3C,CAAgD,EAAhD;IAFI,CAAlB;IAIAjB,OAAO,CAACkB,GAAR,CAAY,WAAZ,EAAyB,CAAC,GAAGN,QAAQ,CAACL,OAAT,CAAiBS,GAAjB,CAAqB,eAArB,CAAJ,EAA2CC,IAA3C,CAAgD,EAAhD,CAAzB,EAA8E;MAC1EE,QAAQ,EAAE,MADgE;MAE1EC,MAAM,EAAE;IAFkE,CAA9E;IAIA,OAAQR,QAAQ,CAACS,IAAT,EAAR;EACH,CAhBD,EAgBGV,IAhBH,CAgBSC,QAAD,IAAc;IAClBb,QAAQ,CAACc,QAAT,CAAkB;MACdC,IAAI,EAAE,WADQ;MAEdQ,OAAO,EAAEV,QAAQ,CAACW;IAFJ,CAAlB;IAIAvB,OAAO,CAACkB,GAAR,CAAY,MAAZ,EAAoBT,IAAI,CAACC,SAAL,CAAeE,QAAQ,CAACW,IAAxB,CAApB,EAAmD;MAC/CJ,QAAQ,EAAE,MADqC;MAE/CC,MAAM,EAAE;IAFuC,CAAnD;EAIH,CAzBD;AA0BH,CA9BM;KAAMnB,Q"},"metadata":{},"sourceType":"module"}