{"ast":null,"code":"var _jsxFileName = \"/home/odin/Desktop/THP\\u2620/Developpeur/ProjetFinal1/projet-coffee/src/components/RegisterForm/index.jsx\",\n    _s2 = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { userStore } from '../../stores/userStore';\nimport { useAtomValue, useAtom } from 'jotai';\nimport \"../../assets/styles/forms.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterForm = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const {\n    name,\n    email\n  } = useAtomValue(userStore);\n  const [password, setPassword] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n\n  const updatePassword = (password, action) => {\n    action(password);\n  };\n\n  const Register = (email, password) => {\n    _s();\n\n    const userAtom = useAtom(userStore);\n    const datas = {\n      user: {\n        email,\n        password\n      }\n    };\n    fetch(\"https://mycoffees.herokuapp.com/users\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(datas)\n    }).then(response => {\n      return response.json();\n    }).then(response => {\n      userAtom({\n        name: response.name,\n        email: response.email\n      });\n    });\n  };\n\n  _s(Register, \"969fjPARhEM8dnNVvov2aBu9xK0=\", false, function () {\n    return [useAtom];\n  });\n\n  const checkMatch = (pass1, pass2) => {\n    if (pass1 !== pass2) {\n      document.getElementById('passwordWarning').innerHTML = \"Les mots de passe doivent être identiques\";\n      document.getElementById('passwordWarning').style.color = \"red\";\n      return false;\n    } else {\n      document.getElementById('passwordWarning').innerHTML = \"Les mots de passe correspondent\";\n      document.getElementById('passwordWarning').style.color = \"green\";\n      return true;\n    }\n  };\n\n  const login = () => {\n    const formData = new FormData(document.getElementById('form'));\n    Register(Array.from(formData)[0][1], Array.from(formData)[1][1]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"crud-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-container\",\n      id: \"form\",\n      onSubmit: event => {\n        event.preventDefault();\n\n        if (checkMatch(password, password2)) {\n          login();\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"form-title\",\n        children: [\"Inscrivez-vous \", name, \" \", email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"text-green\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        className: \"form-input green-focus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"text-green\",\n        children: \"Mot de passe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        name: \"password\",\n        className: \"form-input green-focus\",\n        onChange: event => updatePassword(event.target.value, setPassword)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"text-green\",\n        children: \"Confirmez le mot de passe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"passwordConfirm\",\n        name: \"passwordConfirm\",\n        className: \"form-input green-focus\",\n        onChange: event => {\n          updatePassword(event.target.value, setPassword2);\n          checkMatch(event.target.value, password);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-warning\",\n        id: \"passwordWarning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"S'inscrire\",\n        className: \"btn bg-green text-light no-border\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(RegisterForm, \"towGKzeBBjKhid4oAFH7deJsPEg=\", false, function () {\n  return [useAtomValue];\n});\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["useState","userStore","useAtomValue","useAtom","RegisterForm","name","email","password","setPassword","password2","setPassword2","updatePassword","action","Register","userAtom","datas","user","fetch","method","headers","body","JSON","stringify","then","response","json","checkMatch","pass1","pass2","document","getElementById","innerHTML","style","color","login","formData","FormData","Array","from","event","preventDefault","target","value"],"sources":["/home/odin/Desktop/THP☠/Developpeur/ProjetFinal1/projet-coffee/src/components/RegisterForm/index.jsx"],"sourcesContent":["import { useState } from 'react'\nimport { userStore } from '../../stores/userStore'\nimport { useAtomValue, useAtom } from 'jotai'\nimport \"../../assets/styles/forms.scss\"\n\nconst RegisterForm = () => {\n\n    const {name, email} = useAtomValue(userStore)\n    const [password, setPassword] = useState(\"\")\n    const [password2, setPassword2] = useState(\"\")\n\n    const updatePassword = (password, action) => {\n        action(password)\n    }\n\n    const Register = (email, password) => {\n\n        const userAtom = useAtom(userStore)\n    \n        const datas = {\n            user: {\n                email,\n                password\n            }\n        }\n    \n        fetch(\"https://mycoffees.herokuapp.com/users\", {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(datas),\n        }).then((response) => {\n            return (response.json())\n        }).then((response) => {\n            userAtom({\n                name: response.name,\n                email: response.email\n            })\n        })\n    }\n\n    const checkMatch = (pass1, pass2) => {\n        if (pass1 !== pass2) {\n            document.getElementById('passwordWarning').innerHTML = \"Les mots de passe doivent être identiques\"\n            document.getElementById('passwordWarning').style.color = \"red\"\n            return (false)\n        } else {\n            document.getElementById('passwordWarning').innerHTML = \"Les mots de passe correspondent\"\n            document.getElementById('passwordWarning').style.color = \"green\"\n            return (true)\n        }\n    }\n\n    const login = () => {\n        const formData = new FormData(document.getElementById('form'))\n        Register(Array.from(formData)[0][1], Array.from(formData)[1][1])\n    }\n\n    return (\n        <div className=\"crud-container\">\n            <form className=\"form-container\" id=\"form\" onSubmit={event => {event.preventDefault(); if (checkMatch(password, password2)) {login()}}}>\n                <h1 className='form-title'>Inscrivez-vous {name} {email}</h1>\n                <label className='text-green'>Email</label>\n                <input type=\"email\" id=\"email\" name=\"email\" className=\"form-input green-focus\" />\n                <label className='text-green'>Mot de passe</label>\n                <input type=\"password\" id=\"password\" name=\"password\" className=\"form-input green-focus\" onChange={event => updatePassword(event.target.value, setPassword)}/>\n                <label className='text-green'>Confirmez le mot de passe</label>\n                <input type=\"password\" id=\"passwordConfirm\" name=\"passwordConfirm\" className=\"form-input green-focus\" onChange={event => { updatePassword(event.target.value, setPassword2); checkMatch(event.target.value, password)}}/>\n                <p className='text-warning' id=\"passwordWarning\"></p>\n                <input type=\"submit\" value=\"S'inscrire\" className=\"btn bg-green text-light no-border\"/>\n            </form>\n        </div>\n    )\n}\n\nexport default RegisterForm"],"mappings":"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"},"metadata":{},"sourceType":"module"}